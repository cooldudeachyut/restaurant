(()=>{"use strict";var t={890:(t,n,e)=>{e.d(n,{Z:()=>p});var i=e(15),r=e.n(i),a=e(645),o=e.n(a),s=e(667),c=e.n(s),d=new URL(e(49),e.b),l=o()(r()),A=c()(d);l.push([t.id,"@font-face {\n\tfont-family: 'Dancing Script';\n\tsrc: url("+A+") format('truetype');\n\tfont-weight: 700;\n      }\n\n#main {\n\tfont-family: 'Dancing Script', 'sans-serif';\n\tcolor: rgb(255,255,255);\n\tbackground-color: rgb(39, 36, 36);\n\tfont-weight: 400;\n\tmargin: 0;\n}\n\n#content {\n\tz-index: -1;\n\tbox-sizing: border-box;\n\tdisplay:flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: space-between;\n\twidth:100%;\n\tmin-height:100vh;\n}\n\n#topbar {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\twidth:100%;\n\theight: 70px;\n\tbackground-color: rgb(0, 0, 0);\n}\n\n.tabtn {\n\tdisplay:flex;\n\talign-items: center;\n\tjustify-content: center;\n\tmargin: 10px 15px;\n\theight: 40px;\n\twidth: 120px;\n\tbackground-color: rgb(219, 5, 5);\n\tborder-width:1px;\n\tborder-color: rgb(255,255,255);\n\tborder-radius: 3px;\n\tfont-size: 1.7rem;\n\tfont-family: 'Dancing Script', 'sans-serif';\n}\n\n#infodiv {\n\tbox-sizing: border-box;\n\tmin-height: calc(100vh - 120px);\n\tdisplay:flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: space-evenly;\n}\n\n.head {\n\tfont-size: 40px;\n\tmargin:0;\n}\n\n.headbox {\n\twidth:500px;\n\tdisplay: flex;\n\talign-items: center;\n\tbackground-color: rgb(20, 20, 20);\n\tborder: 3px solid rgb(255,255,255);\n\tmargin: 20px 0;\n}\n\n.subheadbox {\n\twidth: 300px;\n\tjustify-content: center;\n\tfont-size:35px;\n\tmargin: 40px 0 20px 0;\n}\n\n.icon {\n\twidth:60px;\n\tmargin-right:75px;\n}\n\n.infobox {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tborder-radius: 50%;\n\twidth: 700px;\n\tmin-height: 100px;\n\tborder: 5px solid rgb(247, 247, 247);\n\tbackground-color: rgb(20, 20, 20);\n\tpadding: 10% 10%;\n\tmargin: 30px 0;\n}\n\n.infotext {\n\ttext-align: center;\n\tword-wrap: break-word;\n\twidth:100%;\n\tfont-size: 23px;\n\tmargin:0;\n}\n\n.infohead {\n\tmargin-bottom: 10px;\n\tfont-size:35px; \n\ttext-decoration: underline;\n}\n\n.dual {\n\tmargin-top:20px;\n\twidth:50%;\n\tdisplay:flex;\n\talign-items: center;\n\tjustify-content: space-between;\n}\n\n.price {\n\tfont-size: 30px;\n\tfont-weight: 700;\n\ttext-decoration-style: solid;\n}\n\n.img {\n\twidth:200px;\n\theight:200px;\n\tobject-fit: cover;\n\tborder-radius: 2%;\n}\n\n.bigger-img {\n\twidth:300px;\n\theight:300px;\n}\n\n#bottombar {\n\twidth:100%;\n\theight: 50px;\n\tbackground-color: rgb(0, 0, 0);\n}","",{version:3,sources:["webpack://./src/styles/style.css"],names:[],mappings:"AAAA;CACC,6BAA6B;CAC7B,+DAA0D;CAC1D,gBAAgB;MACX;;AAEN;CACC,2CAA2C;CAC3C,uBAAuB;CACvB,iCAAiC;CACjC,gBAAgB;CAChB,SAAS;AACV;;AAEA;CACC,WAAW;CACX,sBAAsB;CACtB,YAAY;CACZ,sBAAsB;CACtB,mBAAmB;CACnB,8BAA8B;CAC9B,UAAU;CACV,gBAAgB;AACjB;;AAEA;CACC,aAAa;CACb,mBAAmB;CACnB,uBAAuB;CACvB,UAAU;CACV,YAAY;CACZ,8BAA8B;AAC/B;;AAEA;CACC,YAAY;CACZ,mBAAmB;CACnB,uBAAuB;CACvB,iBAAiB;CACjB,YAAY;CACZ,YAAY;CACZ,gCAAgC;CAChC,gBAAgB;CAChB,8BAA8B;CAC9B,kBAAkB;CAClB,iBAAiB;CACjB,2CAA2C;AAC5C;;AAEA;CACC,sBAAsB;CACtB,+BAA+B;CAC/B,YAAY;CACZ,sBAAsB;CACtB,mBAAmB;CACnB,6BAA6B;AAC9B;;AAEA;CACC,eAAe;CACf,QAAQ;AACT;;AAEA;CACC,WAAW;CACX,aAAa;CACb,mBAAmB;CACnB,iCAAiC;CACjC,kCAAkC;CAClC,cAAc;AACf;;AAEA;CACC,YAAY;CACZ,uBAAuB;CACvB,cAAc;CACd,qBAAqB;AACtB;;AAEA;CACC,UAAU;CACV,iBAAiB;AAClB;;AAEA;CACC,aAAa;CACb,sBAAsB;CACtB,mBAAmB;CACnB,uBAAuB;CACvB,kBAAkB;CAClB,YAAY;CACZ,iBAAiB;CACjB,oCAAoC;CACpC,iCAAiC;CACjC,gBAAgB;CAChB,cAAc;AACf;;AAEA;CACC,kBAAkB;CAClB,qBAAqB;CACrB,UAAU;CACV,eAAe;CACf,QAAQ;AACT;;AAEA;CACC,mBAAmB;CACnB,cAAc;CACd,0BAA0B;AAC3B;;AAEA;CACC,eAAe;CACf,SAAS;CACT,YAAY;CACZ,mBAAmB;CACnB,8BAA8B;AAC/B;;AAEA;CACC,eAAe;CACf,gBAAgB;CAChB,4BAA4B;AAC7B;;AAEA;CACC,WAAW;CACX,YAAY;CACZ,iBAAiB;CACjB,iBAAiB;AAClB;;AAEA;CACC,WAAW;CACX,YAAY;AACb;;AAEA;CACC,UAAU;CACV,YAAY;CACZ,8BAA8B;AAC/B",sourcesContent:["@font-face {\n\tfont-family: 'Dancing Script';\n\tsrc: url('../assets/DancingScript.ttf') format('truetype');\n\tfont-weight: 700;\n      }\n\n#main {\n\tfont-family: 'Dancing Script', 'sans-serif';\n\tcolor: rgb(255,255,255);\n\tbackground-color: rgb(39, 36, 36);\n\tfont-weight: 400;\n\tmargin: 0;\n}\n\n#content {\n\tz-index: -1;\n\tbox-sizing: border-box;\n\tdisplay:flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: space-between;\n\twidth:100%;\n\tmin-height:100vh;\n}\n\n#topbar {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\twidth:100%;\n\theight: 70px;\n\tbackground-color: rgb(0, 0, 0);\n}\n\n.tabtn {\n\tdisplay:flex;\n\talign-items: center;\n\tjustify-content: center;\n\tmargin: 10px 15px;\n\theight: 40px;\n\twidth: 120px;\n\tbackground-color: rgb(219, 5, 5);\n\tborder-width:1px;\n\tborder-color: rgb(255,255,255);\n\tborder-radius: 3px;\n\tfont-size: 1.7rem;\n\tfont-family: 'Dancing Script', 'sans-serif';\n}\n\n#infodiv {\n\tbox-sizing: border-box;\n\tmin-height: calc(100vh - 120px);\n\tdisplay:flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: space-evenly;\n}\n\n.head {\n\tfont-size: 40px;\n\tmargin:0;\n}\n\n.headbox {\n\twidth:500px;\n\tdisplay: flex;\n\talign-items: center;\n\tbackground-color: rgb(20, 20, 20);\n\tborder: 3px solid rgb(255,255,255);\n\tmargin: 20px 0;\n}\n\n.subheadbox {\n\twidth: 300px;\n\tjustify-content: center;\n\tfont-size:35px;\n\tmargin: 40px 0 20px 0;\n}\n\n.icon {\n\twidth:60px;\n\tmargin-right:75px;\n}\n\n.infobox {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tborder-radius: 50%;\n\twidth: 700px;\n\tmin-height: 100px;\n\tborder: 5px solid rgb(247, 247, 247);\n\tbackground-color: rgb(20, 20, 20);\n\tpadding: 10% 10%;\n\tmargin: 30px 0;\n}\n\n.infotext {\n\ttext-align: center;\n\tword-wrap: break-word;\n\twidth:100%;\n\tfont-size: 23px;\n\tmargin:0;\n}\n\n.infohead {\n\tmargin-bottom: 10px;\n\tfont-size:35px; \n\ttext-decoration: underline;\n}\n\n.dual {\n\tmargin-top:20px;\n\twidth:50%;\n\tdisplay:flex;\n\talign-items: center;\n\tjustify-content: space-between;\n}\n\n.price {\n\tfont-size: 30px;\n\tfont-weight: 700;\n\ttext-decoration-style: solid;\n}\n\n.img {\n\twidth:200px;\n\theight:200px;\n\tobject-fit: cover;\n\tborder-radius: 2%;\n}\n\n.bigger-img {\n\twidth:300px;\n\theight:300px;\n}\n\n#bottombar {\n\twidth:100%;\n\theight: 50px;\n\tbackground-color: rgb(0, 0, 0);\n}"],sourceRoot:""}]);const p=l},645:t=>{t.exports=function(t){var n=[];return n.toString=function(){return this.map((function(n){var e=t(n);return n[2]?"@media ".concat(n[2]," {").concat(e,"}"):e})).join("")},n.i=function(t,e,i){"string"==typeof t&&(t=[[null,t,""]]);var r={};if(i)for(var a=0;a<this.length;a++){var o=this[a][0];null!=o&&(r[o]=!0)}for(var s=0;s<t.length;s++){var c=[].concat(t[s]);i&&r[c[0]]||(e&&(c[2]?c[2]="".concat(e," and ").concat(c[2]):c[2]=e),n.push(c))}},n}},15:t=>{function n(t,n){(null==n||n>t.length)&&(n=t.length);for(var e=0,i=new Array(n);e<n;e++)i[e]=t[e];return i}t.exports=function(t){var e,i,r=(i=4,function(t){if(Array.isArray(t))return t}(e=t)||function(t,n){var e=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=e){var i,r,a=[],o=!0,s=!1;try{for(e=e.call(t);!(o=(i=e.next()).done)&&(a.push(i.value),!n||a.length!==n);o=!0);}catch(t){s=!0,r=t}finally{try{o||null==e.return||e.return()}finally{if(s)throw r}}return a}}(e,i)||function(t,e){if(t){if("string"==typeof t)return n(t,e);var i=Object.prototype.toString.call(t).slice(8,-1);return"Object"===i&&t.constructor&&(i=t.constructor.name),"Map"===i||"Set"===i?Array.from(t):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?n(t,e):void 0}}(e,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=r[1],o=r[3];if(!o)return a;if("function"==typeof btoa){var s=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),c="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),d="/*# ".concat(c," */"),l=o.sources.map((function(t){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(t," */")}));return[a].concat(l).concat([d]).join("\n")}return[a].join("\n")}},667:t=>{t.exports=function(t,n){return n||(n={}),t?(t=String(t.__esModule?t.default:t),/^['"].*['"]$/.test(t)&&(t=t.slice(1,-1)),n.hash&&(t+=n.hash),/["'() \t\n]|(%20)/.test(t)||n.needQuotes?'"'.concat(t.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):t):t}},379:t=>{var n=[];function e(t){for(var e=-1,i=0;i<n.length;i++)if(n[i].identifier===t){e=i;break}return e}function i(t,i){for(var a={},o=[],s=0;s<t.length;s++){var c=t[s],d=i.base?c[0]+i.base:c[0],l=a[d]||0,A="".concat(d," ").concat(l);a[d]=l+1;var p=e(A),u={css:c[1],media:c[2],sourceMap:c[3]};-1!==p?(n[p].references++,n[p].updater(u)):n.push({identifier:A,updater:r(u,i),references:1}),o.push(A)}return o}function r(t,n){var e=n.domAPI(n);return e.update(t),function(n){if(n){if(n.css===t.css&&n.media===t.media&&n.sourceMap===t.sourceMap)return;e.update(t=n)}else e.remove()}}t.exports=function(t,r){var a=i(t=t||[],r=r||{});return function(t){t=t||[];for(var o=0;o<a.length;o++){var s=e(a[o]);n[s].references--}for(var c=i(t,r),d=0;d<a.length;d++){var l=e(a[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=c}}},569:t=>{var n={};t.exports=function(t,e){var i=function(t){if(void 0===n[t]){var e=document.querySelector(t);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(t){e=null}n[t]=e}return n[t]}(t);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(e)}},216:t=>{t.exports=function(t){var n=document.createElement("style");return t.setAttributes(n,t.attributes),t.insert(n),n}},565:(t,n,e)=>{t.exports=function(t){var n=e.nc;n&&t.setAttribute("nonce",n)}},795:t=>{t.exports=function(t){var n=t.insertStyleElement(t);return{update:function(e){!function(t,n,e){var i=e.css,r=e.media,a=e.sourceMap;r?t.setAttribute("media",r):t.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(i,t)}(n,t,e)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)}}}},589:t=>{t.exports=function(t,n){if(n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}},49:(t,n,e)=>{t.exports=e.p+"d618761a95b9c756b18a.ttf"},896:(t,n,e)=>{t.exports=e.p+"4cb66dafc9c76c1f8c68.jpeg"},273:(t,n,e)=>{t.exports=e.p+"f8bb2d8162010c89376c.jpg"},815:(t,n,e)=>{t.exports=e.p+"34b4df9e9ad399c09d6f.png"},205:(t,n,e)=>{t.exports=e.p+"c2296aa29ec887584a25.jpg"},922:(t,n,e)=>{t.exports=e.p+"653c8cc8efda1099c765.jpg"},484:(t,n,e)=>{t.exports=e.p+"0289c5341d30754d77b9.jpg"},314:(t,n,e)=>{t.exports=e.p+"023b1ec9fe965c8efdc5.jpg"},36:(t,n,e)=>{t.exports=e.p+"163a095646a9fa443cf9.jpg"},650:(t,n,e)=>{t.exports=e.p+"56a0f80a789a781b5f96.jpg"},536:(t,n,e)=>{t.exports=e.p+"e0109f7c005ef417d628.jpg"},941:(t,n,e)=>{t.exports=e.p+"048be389dcea7c903c0c.jpg"},692:(t,n,e)=>{t.exports=e.p+"486f4fa6443c4060a2f8.jpg"},779:(t,n,e)=>{e.d(n,{Z:()=>s});var i=e(815),r=e(205),a=e(922),o=e(692);function s(t){function n(t,n,e,i){const r=document.createElement("div");r.classList.add("infobox");const a=document.createElement("div");a.classList.add("dual"),a.setAttribute("style","width: 60%;");const o=document.createElement("div");let s=document.createElement("p");s.classList.add("infotext"),s.innerText=t;let c=document.createElement("p");c.classList.add("infotext"),c.innerText=n;const d=document.createElement("img");d.src=i,d.classList.add("img");let l=document.createElement("p");return l.classList.add("infotext"),l.innerText=e,o.append(s),o.append(c),o.append(l),a.append(o),a.append(d),r.append(a),r}t.append(function(){const t=document.createElement("div");t.classList.add("headbox");let n=document.createElement("h1");n.classList.add("head"),n.innerText="Giovanni's Contacts";const e=document.createElement("img");return e.src=i,e.classList.add("icon"),t.append(e),t.append(n),t}());const e=function(){const t=[];return t.push(n("Giorno Giovanni","Manager","555-111-222",a)),t.push(n("Marco Giovanni","Chef","555-111-222",r)),t.push(n("Lucia Giovanni","Waiteress","555-111-222",o)),t}();for(let n=0;n<e.length;n++)t.append(e[n])}},755:(t,n,e)=>{e.d(n,{Z:()=>r});var i=e(815);function r(t){t.append(function(){const t=document.createElement("div");t.classList.add("headbox");let n=document.createElement("h1");n.classList.add("head"),n.innerText="Giovanni's Pizzeria";const e=document.createElement("img");return e.src=i,e.classList.add("icon"),t.append(e),t.append(n),t}()),t.append(function(){const t=document.createElement("div");t.classList.add("infobox");let n=document.createElement("p");return n.innerText="Mulan's Pizzeria has been providing the best Italian Neapolitan pizzas since 1889 with hand-made dough and freshly picked tomatoes to create a blast of flavour and tone that you will never forget!",n.classList.add("infotext"),t.append(n),t}()),t.append(function(){const t=document.createElement("div");t.classList.add("infobox");let n=document.createElement("h1");n.classList.add("infotext"),n.classList.add("infohead"),n.innerText="Hours",t.append(n);const e=["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"];for(let n=0;n<7;n++){let i=document.createElement("p");i.classList.add("infotext"),i.innerText=6!=n&&2!=n?`${e[n]}: 8:00 - 22:00`:2==n?`${e[n]}: 10:00 - 20:00`:`${e[n]}: 10:00 - 00:00`,t.append(i)}return t}()),t.append(function(){const t=document.createElement("div");t.classList.add("infobox");let n=document.createElement("h1");n.classList.add("infotext"),n.classList.add("infohead"),n.innerText="Location",t.append(n);let e=document.createElement("p");return e.classList.add("infotext"),e.innerText="4098 Margaret Street, Houston, Texas, 77587",t.append(e),t}())}},430:(t,n,e)=>{e.d(n,{Z:()=>A});var i=e(815),r=e(273),a=e(314),o=e(941),s=e(896),c=e(484),d=e(536),l=e(650);function A(t){function n(t){let n=document.createElement("h2");return n.classList.add("headbox"),n.classList.add("subheadbox"),n.innerHTML=t,n}function e(t,n,e,i){const r=document.createElement("div");r.classList.add("infobox");let a=document.createElement("h1");a.classList.add("infotext"),a.classList.add("infohead"),a.innerText=t,r.append(a);let o=document.createElement("p");o.classList.add("infotext"),o.innerText=n;const s=document.createElement("div");s.classList.add("dual");let c=document.createElement("p");c.classList.add("price"),c.innerText=e;const d=document.createElement("img");return d.src=i,d.classList.add("img"),s.append(c),s.append(d),r.append(a),r.append(o),r.append(s),r}t.append(function(){const t=document.createElement("div");t.classList.add("headbox");let n=document.createElement("h1");n.classList.add("head"),n.innerText="Giovanni's Menu";const e=document.createElement("img");return e.src=i,e.classList.add("icon"),t.append(e),t.append(n),t}());const A=function(){const t=[];return t.push(n("Beverages")),t.push(e("Aperitivo","Aperitivo is known to be an excellent drink that prepares the digestive system before one sits down for a delicious Italian dinner. It is a light and dry tonic, which prepares the body’s digestive metabolism better than an overly sweetened cocktail.","$2",r)),t.push(e("Negroni","This famous Italian drink has an interesting history. Named after Count Camillo Negroni, a frequent traveller living in Florence in the 1920s.Negroni is made from one part of gin, one part of Campari, and one part of red Vermouth, and garnished with a slice of orange.","$3",a)),t}();for(let n=0;n<A.length;n++)t.append(A[n]);const p=function(){const t=[];return t.push(n("Desserts")),t.push(e("Tiramisù","The most famous of all Italian desserts, Tiramisù is a powerful layering of coffee-soaked savoiardi (sponge finger biscuits) and a rich cream made with mascarpone cheese, eggs and sugar, sometimes spiced up with a drop of liqueur.","$8",o)),t.push(e("Sbrisolona","The name of this simple yet irresistible cake means ‘crumbly’ and refers to its extreme flakiness. Today, it’s usually made with a mix of corn and white flour, almonds and a generous amount of butter. It’s then enriched with sugar, eggs and lemon zest – resulting in its iconic uneven texture.","$8",s)),t}();for(let n=0;n<p.length;n++)t.append(p[n]);const u=function(){const t=[];return t.push(n("Pizza")),t.push(e("Neapolitan Margherita","She is quite simply the queen of the table. The Margherita pizza is undoubtedly the favourite pizza of Italian people, with key ingredients being mozzarella de bufala, tomato, oil and basil, combined in a traditional way by Italian pizza makers called pizzaioli.","$15",c)),t.push(e("Quattro Formaggi","You have to be a true cheese lover to appreciate this creamy, delicious and attractive white pizza, whose name means simply ‘Four Cheeses’. The ingredients and type of cheese used are provolone, parmigiano reggiano, mozzarella and gorgonzola.","$18",l)),t.push(e("Quattro Stagioni","Quattro Stagioni, meaning ‘Four Seasons’, is a mixture of strong flavours together with mozzarella and tomato. On this pizza you can find cooked ham, mushrooms, artichokes and black olives.","$20",d)),t}();for(let n=0;n<u.length;n++)t.append(u[n])}}},n={};function e(i){var r=n[i];if(void 0!==r)return r.exports;var a=n[i]={id:i,exports:{}};return t[i](a,a.exports,e),a.exports}e.m=t,e.n=t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return e.d(n,{a:n}),n},e.d=(t,n)=>{for(var i in n)e.o(n,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:n[i]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),e.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var n=e.g.document;if(!t&&n&&(n.currentScript&&(t=n.currentScript.src),!t)){var i=n.getElementsByTagName("script");i.length&&(t=i[i.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})(),e.b=document.baseURI||self.location.href,(()=>{var t=e(379),n=e.n(t),i=e(795),r=e.n(i),a=e(569),o=e.n(a),s=e(565),c=e.n(s),d=e(216),l=e.n(d),A=e(589),p=e.n(A),u=e(890),f={};f.styleTagTransform=p(),f.setAttributes=c(),f.insert=o().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=l(),n()(u.Z,f),u.Z&&u.Z.locals&&u.Z.locals;var m=e(36),C=e(755),h=e(430),g=e(779);const b=document.getElementById("content");b.style.background="url("+m+") no-repeat center center fixed";const x=document.createElement("div");x.id="topbar";const B=document.createElement("div");B.id="infodiv";const v=document.createElement("div");v.id="bottombar",b.append(x),b.append(B),b.append(v);let y=document.createElement("button"),w=document.createElement("button"),E=document.createElement("button");function L(){for(;B.firstChild;)B.removeChild(B.firstChild)}y.classList.add("tabtn"),w.classList.add("tabtn"),E.classList.add("tabtn"),x.append(y),x.append(w),x.append(E),y.innerText="Home",w.innerText="Menu",E.innerText="Contact",y.addEventListener("click",(()=>{L(),(0,C.Z)(B)})),w.addEventListener("click",(()=>{L(),(0,h.Z)(B)})),E.addEventListener("click",(()=>{L(),(0,g.Z)(B)})),(0,C.Z)(B)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,