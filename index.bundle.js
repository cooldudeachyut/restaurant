(()=>{"use strict";var n={890:(n,t,e)=>{e.d(t,{Z:()=>p});var r=e(15),i=e.n(r),o=e(645),a=e.n(o),c=e(667),s=e.n(c),d=new URL(e(49),e.b),A=a()(i()),l=s()(d);A.push([n.id,"@font-face {\n\tfont-family: 'Dancing Script';\n\tsrc: url("+l+") format('truetype');\n\tfont-weight: 700;\n      }\n\n#main {\n\tfont-family: 'Dancing Script', 'sans-serif';\n\tcolor: rgb(255,255,255);\n\tbackground-color: rgb(39, 36, 36);\n\tfont-weight: 400;\n\tmargin: 0;\n}\n\n#content {\n\tz-index: -1;\n\tbox-sizing: border-box;\n\tdisplay:flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: space-between;\n\twidth:100%;\n\tmin-height:100vh;\n}\n\n#topbar {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\twidth:100%;\n\theight: 70px;\n\tbackground-color: rgb(0, 0, 0);\n}\n\n.tabtn {\n\tdisplay:flex;\n\talign-items: center;\n\tjustify-content: center;\n\tmargin: 10px 15px;\n\theight: 40px;\n\twidth: 120px;\n\tbackground-color: rgb(219, 5, 5);\n\tborder-width:1px;\n\tborder-color: rgb(255,255,255);\n\tborder-radius: 3px;\n\tfont-size: 1.7rem;\n\tfont-family: 'Dancing Script', 'sans-serif';\n}\n\n#infodiv {\n\tbox-sizing: border-box;\n\tmin-height: calc(100vh - 120px);\n\tdisplay:flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: space-evenly;\n}\n\n.head {\n\tfont-size: 40px;\n\tmargin:0;\n}\n\n.headbox {\n\twidth:500px;\n\tdisplay: flex;\n\talign-items: center;\n\tbackground-color: rgb(20, 20, 20);\n\tborder: 3px solid rgb(255,255,255);\n\tmargin: 20px 0;\n}\n\n.icon {\n\twidth:60px;\n\tmargin-right:80px;\n}\n\n.infobox {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tborder-radius: 50%;\n\twidth: 700px;\n\theight: 100px;\n\tborder: 5px solid rgb(247, 247, 247);\n\tbackground-color: rgb(20, 20, 20);\n\tpadding: 20px 10px;\n\tmargin: 30px 0;\n\n}\n\n#bottombar {\n\twidth:100%;\n\theight: 50px;\n\tbackground-color: rgb(0, 0, 0);\n}","",{version:3,sources:["webpack://./src/styles/style.css"],names:[],mappings:"AAAA;CACC,6BAA6B;CAC7B,+DAA0D;CAC1D,gBAAgB;MACX;;AAEN;CACC,2CAA2C;CAC3C,uBAAuB;CACvB,iCAAiC;CACjC,gBAAgB;CAChB,SAAS;AACV;;AAEA;CACC,WAAW;CACX,sBAAsB;CACtB,YAAY;CACZ,sBAAsB;CACtB,mBAAmB;CACnB,8BAA8B;CAC9B,UAAU;CACV,gBAAgB;AACjB;;AAEA;CACC,aAAa;CACb,mBAAmB;CACnB,uBAAuB;CACvB,UAAU;CACV,YAAY;CACZ,8BAA8B;AAC/B;;AAEA;CACC,YAAY;CACZ,mBAAmB;CACnB,uBAAuB;CACvB,iBAAiB;CACjB,YAAY;CACZ,YAAY;CACZ,gCAAgC;CAChC,gBAAgB;CAChB,8BAA8B;CAC9B,kBAAkB;CAClB,iBAAiB;CACjB,2CAA2C;AAC5C;;AAEA;CACC,sBAAsB;CACtB,+BAA+B;CAC/B,YAAY;CACZ,sBAAsB;CACtB,mBAAmB;CACnB,6BAA6B;AAC9B;;AAEA;CACC,eAAe;CACf,QAAQ;AACT;;AAEA;CACC,WAAW;CACX,aAAa;CACb,mBAAmB;CACnB,iCAAiC;CACjC,kCAAkC;CAClC,cAAc;AACf;;AAEA;CACC,UAAU;CACV,iBAAiB;AAClB;;AAEA;CACC,aAAa;CACb,sBAAsB;CACtB,mBAAmB;CACnB,kBAAkB;CAClB,YAAY;CACZ,aAAa;CACb,oCAAoC;CACpC,iCAAiC;CACjC,kBAAkB;CAClB,cAAc;;AAEf;;AAEA;CACC,UAAU;CACV,YAAY;CACZ,8BAA8B;AAC/B",sourcesContent:["@font-face {\n\tfont-family: 'Dancing Script';\n\tsrc: url('../assets/DancingScript.ttf') format('truetype');\n\tfont-weight: 700;\n      }\n\n#main {\n\tfont-family: 'Dancing Script', 'sans-serif';\n\tcolor: rgb(255,255,255);\n\tbackground-color: rgb(39, 36, 36);\n\tfont-weight: 400;\n\tmargin: 0;\n}\n\n#content {\n\tz-index: -1;\n\tbox-sizing: border-box;\n\tdisplay:flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: space-between;\n\twidth:100%;\n\tmin-height:100vh;\n}\n\n#topbar {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\twidth:100%;\n\theight: 70px;\n\tbackground-color: rgb(0, 0, 0);\n}\n\n.tabtn {\n\tdisplay:flex;\n\talign-items: center;\n\tjustify-content: center;\n\tmargin: 10px 15px;\n\theight: 40px;\n\twidth: 120px;\n\tbackground-color: rgb(219, 5, 5);\n\tborder-width:1px;\n\tborder-color: rgb(255,255,255);\n\tborder-radius: 3px;\n\tfont-size: 1.7rem;\n\tfont-family: 'Dancing Script', 'sans-serif';\n}\n\n#infodiv {\n\tbox-sizing: border-box;\n\tmin-height: calc(100vh - 120px);\n\tdisplay:flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: space-evenly;\n}\n\n.head {\n\tfont-size: 40px;\n\tmargin:0;\n}\n\n.headbox {\n\twidth:500px;\n\tdisplay: flex;\n\talign-items: center;\n\tbackground-color: rgb(20, 20, 20);\n\tborder: 3px solid rgb(255,255,255);\n\tmargin: 20px 0;\n}\n\n.icon {\n\twidth:60px;\n\tmargin-right:80px;\n}\n\n.infobox {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tborder-radius: 50%;\n\twidth: 700px;\n\theight: 100px;\n\tborder: 5px solid rgb(247, 247, 247);\n\tbackground-color: rgb(20, 20, 20);\n\tpadding: 20px 10px;\n\tmargin: 30px 0;\n\n}\n\n#bottombar {\n\twidth:100%;\n\theight: 50px;\n\tbackground-color: rgb(0, 0, 0);\n}"],sourceRoot:""}]);const p=A},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e=n(t);return t[2]?"@media ".concat(t[2]," {").concat(e,"}"):e})).join("")},t.i=function(n,e,r){"string"==typeof n&&(n=[[null,n,""]]);var i={};if(r)for(var o=0;o<this.length;o++){var a=this[o][0];null!=a&&(i[a]=!0)}for(var c=0;c<n.length;c++){var s=[].concat(n[c]);r&&i[s[0]]||(e&&(s[2]?s[2]="".concat(e," and ").concat(s[2]):s[2]=e),t.push(s))}},t}},15:n=>{function t(n,t){(null==t||t>n.length)&&(t=n.length);for(var e=0,r=new Array(t);e<t;e++)r[e]=n[e];return r}n.exports=function(n){var e,r,i=(r=4,function(n){if(Array.isArray(n))return n}(e=n)||function(n,t){var e=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=e){var r,i,o=[],a=!0,c=!1;try{for(e=e.call(n);!(a=(r=e.next()).done)&&(o.push(r.value),!t||o.length!==t);a=!0);}catch(n){c=!0,i=n}finally{try{a||null==e.return||e.return()}finally{if(c)throw i}}return o}}(e,r)||function(n,e){if(n){if("string"==typeof n)return t(n,e);var r=Object.prototype.toString.call(n).slice(8,-1);return"Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r?Array.from(n):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?t(n,e):void 0}}(e,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=i[1],a=i[3];if(!a)return o;if("function"==typeof btoa){var c=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),d="/*# ".concat(s," */"),A=a.sources.map((function(n){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(n," */")}));return[o].concat(A).concat([d]).join("\n")}return[o].join("\n")}},667:n=>{n.exports=function(n,t){return t||(t={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),t.hash&&(n+=t.hash),/["'() \t\n]|(%20)/.test(n)||t.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},379:n=>{var t=[];function e(n){for(var e=-1,r=0;r<t.length;r++)if(t[r].identifier===n){e=r;break}return e}function r(n,r){for(var o={},a=[],c=0;c<n.length;c++){var s=n[c],d=r.base?s[0]+r.base:s[0],A=o[d]||0,l="".concat(d," ").concat(A);o[d]=A+1;var p=e(l),u={css:s[1],media:s[2],sourceMap:s[3]};-1!==p?(t[p].references++,t[p].updater(u)):t.push({identifier:l,updater:i(u,r),references:1}),a.push(l)}return a}function i(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap)return;e.update(n=t)}else e.remove()}}n.exports=function(n,i){var o=r(n=n||[],i=i||{});return function(n){n=n||[];for(var a=0;a<o.length;a++){var c=e(o[a]);t[c].references--}for(var s=r(n,i),d=0;d<o.length;d++){var A=e(o[d]);0===t[A].references&&(t[A].updater(),t.splice(A,1))}o=s}}},569:n=>{var t={};n.exports=function(n,e){var r=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var r=e.css,i=e.media,o=e.sourceMap;i?n.setAttribute("media",i):n.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(r,n)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}},49:(n,t,e)=>{n.exports=e.p+"d618761a95b9c756b18a.ttf"},815:(n,t,e)=>{n.exports=e.p+"34b4df9e9ad399c09d6f.png"},36:(n,t,e)=>{n.exports=e.p+"163a095646a9fa443cf9.jpg"},779:(n,t,e)=>{e.d(t,{Z:()=>i});var r=e(815);function i(n){const t=document.createElement("div");t.classList.add("headbox");let e=document.createElement("h1");e.classList.add("head"),e.innerText="Mulan's Contact";const i=document.createElement("img");i.src=r,i.classList.add("icon"),t.append(i),t.append(e);let o=document.createElement("div"),a=document.createElement("div"),c=document.createElement("div");o.classList.add("infobox"),a.classList.add("infobox"),c.classList.add("infobox"),o.innerText="HAHAHAHAHAHHAHA",n.append(t),n.append(o),n.append(a),n.append(c)}},755:(n,t,e)=>{e.d(t,{Z:()=>i});var r=e(815);function i(n){const t=document.createElement("div");t.classList.add("headbox");let e=document.createElement("h1");e.classList.add("head"),e.innerText="Mulan's Pizzeria";const i=document.createElement("img");i.src=r,i.classList.add("icon"),t.append(i),t.append(e);let o=document.createElement("div"),a=document.createElement("div"),c=document.createElement("div");o.classList.add("infobox"),a.classList.add("infobox"),c.classList.add("infobox"),o.innerText="HAHAHAHAHAHHAHA",n.append(t),n.append(o),n.append(a),n.append(c)}},430:(n,t,e)=>{e.d(t,{Z:()=>i});var r=e(815);function i(n){const t=document.createElement("div");t.classList.add("headbox");let e=document.createElement("h1");e.classList.add("head"),e.innerText="Mulan's Menu";const i=document.createElement("img");i.src=r,i.classList.add("icon"),t.append(i),t.append(e);let o=document.createElement("div"),a=document.createElement("div"),c=document.createElement("div");o.classList.add("infobox"),a.classList.add("infobox"),c.classList.add("infobox"),o.innerText="HAHAHAHAHAHHAHA",n.append(t),n.append(o),n.append(a),n.append(c)}}},t={};function e(r){var i=t[r];if(void 0!==i)return i.exports;var o=t[r]={id:r,exports:{}};return n[r](o,o.exports,e),o.exports}e.m=n,e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var r in t)e.o(t,r)&&!e.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:t[r]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var t=e.g.document;if(!n&&t&&(t.currentScript&&(n=t.currentScript.src),!n)){var r=t.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),e.b=document.baseURI||self.location.href,(()=>{var n=e(379),t=e.n(n),r=e(795),i=e.n(r),o=e(569),a=e.n(o),c=e(565),s=e.n(c),d=e(216),A=e.n(d),l=e(589),p=e.n(l),u=e(890),C={};C.styleTagTransform=p(),C.setAttributes=s(),C.insert=a().bind(null,"head"),C.domAPI=i(),C.insertStyleElement=A(),t()(u.Z,C),u.Z&&u.Z.locals&&u.Z.locals;var f=e(36),m=e(755),g=e(430),b=e(779);const h=document.getElementById("content");h.style.background="url("+f+") no-repeat center center fixed";const x=document.createElement("div");x.id="topbar";const B=document.createElement("div");B.id="infodiv";const v=document.createElement("div");v.id="bottombar",h.append(x),h.append(B),h.append(v);let y=document.createElement("button"),E=document.createElement("button"),w=document.createElement("button");function L(){for(;B.firstChild;)B.removeChild(B.firstChild)}y.classList.add("tabtn"),E.classList.add("tabtn"),w.classList.add("tabtn"),x.append(y),x.append(E),x.append(w),y.innerText="Home",E.innerText="Menu",w.innerText="Contact",y.addEventListener("click",(()=>{L(),(0,m.Z)(B)})),E.addEventListener("click",(()=>{L(),(0,g.Z)(B)})),w.addEventListener("click",(()=>{L(),(0,b.Z)(B)})),(0,m.Z)(B)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,